
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN DOT FOR ID INCREMENT INT LBRACE LESSTHANOREQUAL LPAREN NUMBER RBRACE RPAREN SEMICOLON STRING\n    for_loop : FOR LPAREN INT ID ASSIGN NUMBER SEMICOLON ID LESSTHANOREQUAL NUMBER SEMICOLON ID INCREMENT RPAREN LBRACE system_out RBRACE\n    \n    system_out : ID DOT ID DOT ID LPAREN STRING RPAREN SEMICOLON\n    '
    
_lr_action_items = {'FOR':([0,],[2,]),'$end':([1,20,],[0,-1,]),'LPAREN':([2,23,],[3,24,]),'INT':([3,],[4,]),'ID':([4,8,12,16,19,22,],[5,9,13,17,21,23,]),'ASSIGN':([5,],[6,]),'NUMBER':([6,10,],[7,11,]),'SEMICOLON':([7,11,26,],[8,12,27,]),'LESSTHANOREQUAL':([9,],[10,]),'INCREMENT':([13,],[14,]),'RPAREN':([14,25,],[15,26,]),'LBRACE':([15,],[16,]),'DOT':([17,21,],[19,22,]),'RBRACE':([18,27,],[20,-2,]),'STRING':([24,],[25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'for_loop':([0,],[1,]),'system_out':([16,],[18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> for_loop","S'",1,None,None,None),
  ('for_loop -> FOR LPAREN INT ID ASSIGN NUMBER SEMICOLON ID LESSTHANOREQUAL NUMBER SEMICOLON ID INCREMENT RPAREN LBRACE system_out RBRACE','for_loop',17,'p_for_loop','app.py',75),
  ('system_out -> ID DOT ID DOT ID LPAREN STRING RPAREN SEMICOLON','system_out',9,'p_system_out','app.py',85),
]
